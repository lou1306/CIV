//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CcsLexer.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace CIV.Ccs {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class CcsLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		TERM=1, NIL=2, COMMA=3, DIV=4, DEF=5, PAR=6, PREFIX=7, CHOICE=8, TAU=9, 
		LBRACE=10, RBRACE=11, MUL=12, SETDEF=13, LPAREN=14, RPAREN=15, LBRACK=16, 
		RBRACK=17, T__1=18, COACTION=19, ACTION=20, COMMENT=21, IDENTIFIER=22, 
		WHITESPACE=23;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"TERM", "NIL", "COMMA", "DIV", "DEF", "PAR", "PREFIX", "CHOICE", "TAU", 
		"LBRACE", "RBRACE", "MUL", "SETDEF", "LPAREN", "RPAREN", "LBRACK", "RBRACK", 
		"T__1", "COACTION", "ACTION", "InputCharacter", "COMMENT", "IDENTIFIER", 
		"WHITESPACE"
	};


	public CcsLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CcsLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'0'", "','", "'/'", "'='", "'|'", "'.'", "'+'", "'tau'", 
		"'{'", "'}'", "'*'", "'set '", "'('", "')'", "'['", "']'", "'\\'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "TERM", "NIL", "COMMA", "DIV", "DEF", "PAR", "PREFIX", "CHOICE", 
		"TAU", "LBRACE", "RBRACE", "MUL", "SETDEF", "LPAREN", "RPAREN", "LBRACK", 
		"RBRACK", null, "COACTION", "ACTION", "COMMENT", "IDENTIFIER", "WHITESPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CcsLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static CcsLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x19', '\x84', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', 
		'\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', 
		'\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', 
		'\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', 
		'\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\a', 
		'\x14', '`', '\n', '\x14', '\f', '\x14', '\xE', '\x14', '\x63', '\v', 
		'\x14', '\x3', '\x15', '\x3', '\x15', '\a', '\x15', 'g', '\n', '\x15', 
		'\f', '\x15', '\xE', '\x15', 'j', '\v', '\x15', '\x3', '\x16', '\x3', 
		'\x16', '\x3', '\x17', '\x3', '\x17', '\x6', '\x17', 'p', '\n', '\x17', 
		'\r', '\x17', '\xE', '\x17', 'q', '\x3', '\x17', '\x5', '\x17', 'u', '\n', 
		'\x17', '\x3', '\x18', '\x3', '\x18', '\a', '\x18', 'y', '\n', '\x18', 
		'\f', '\x18', '\xE', '\x18', '|', '\v', '\x18', '\x3', '\x19', '\x6', 
		'\x19', '\x7F', '\n', '\x19', '\r', '\x19', '\xE', '\x19', '\x80', '\x3', 
		'\x19', '\x3', '\x19', '\x2', '\x2', '\x1A', '\x3', '\x3', '\x5', '\x4', 
		'\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', 
		'\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', '\x1B', 
		'\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', '#', '\x13', '%', 
		'\x14', '\'', '\x15', ')', '\x16', '+', '\x2', '-', '\x17', '/', '\x18', 
		'\x31', '\x19', '\x3', '\x2', '\a', '\x3', '\x2', '\x63', '|', '\x5', 
		'\x2', '\x32', ';', '\x43', '\\', '\x63', '|', '\x6', '\x2', '\f', '\f', 
		'\xF', '\xF', '\x87', '\x87', '\x202A', '\x202B', '\x3', '\x2', '\x43', 
		'\\', '\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', '\"', '\x2', '\x88', 
		'\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', 
		')', '\x3', '\x2', '\x2', '\x2', '\x2', '-', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '/', '\x3', '\x2', '\x2', '\x2', '\x2', '\x31', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '\x33', '\x3', '\x2', '\x2', '\x2', '\x5', '\x35', '\x3', 
		'\x2', '\x2', '\x2', '\a', '\x37', '\x3', '\x2', '\x2', '\x2', '\t', '\x39', 
		'\x3', '\x2', '\x2', '\x2', '\v', ';', '\x3', '\x2', '\x2', '\x2', '\r', 
		'=', '\x3', '\x2', '\x2', '\x2', '\xF', '?', '\x3', '\x2', '\x2', '\x2', 
		'\x11', '\x41', '\x3', '\x2', '\x2', '\x2', '\x13', '\x43', '\x3', '\x2', 
		'\x2', '\x2', '\x15', 'G', '\x3', '\x2', '\x2', '\x2', '\x17', 'I', '\x3', 
		'\x2', '\x2', '\x2', '\x19', 'K', '\x3', '\x2', '\x2', '\x2', '\x1B', 
		'M', '\x3', '\x2', '\x2', '\x2', '\x1D', 'R', '\x3', '\x2', '\x2', '\x2', 
		'\x1F', 'T', '\x3', '\x2', '\x2', '\x2', '!', 'V', '\x3', '\x2', '\x2', 
		'\x2', '#', 'X', '\x3', '\x2', '\x2', '\x2', '%', 'Z', '\x3', '\x2', '\x2', 
		'\x2', '\'', '\\', '\x3', '\x2', '\x2', '\x2', ')', '\x64', '\x3', '\x2', 
		'\x2', '\x2', '+', 'k', '\x3', '\x2', '\x2', '\x2', '-', 't', '\x3', '\x2', 
		'\x2', '\x2', '/', 'v', '\x3', '\x2', '\x2', '\x2', '\x31', '~', '\x3', 
		'\x2', '\x2', '\x2', '\x33', '\x34', '\a', '=', '\x2', '\x2', '\x34', 
		'\x4', '\x3', '\x2', '\x2', '\x2', '\x35', '\x36', '\a', '\x32', '\x2', 
		'\x2', '\x36', '\x6', '\x3', '\x2', '\x2', '\x2', '\x37', '\x38', '\a', 
		'.', '\x2', '\x2', '\x38', '\b', '\x3', '\x2', '\x2', '\x2', '\x39', ':', 
		'\a', '\x31', '\x2', '\x2', ':', '\n', '\x3', '\x2', '\x2', '\x2', ';', 
		'<', '\a', '?', '\x2', '\x2', '<', '\f', '\x3', '\x2', '\x2', '\x2', '=', 
		'>', '\a', '~', '\x2', '\x2', '>', '\xE', '\x3', '\x2', '\x2', '\x2', 
		'?', '@', '\a', '\x30', '\x2', '\x2', '@', '\x10', '\x3', '\x2', '\x2', 
		'\x2', '\x41', '\x42', '\a', '-', '\x2', '\x2', '\x42', '\x12', '\x3', 
		'\x2', '\x2', '\x2', '\x43', '\x44', '\a', 'v', '\x2', '\x2', '\x44', 
		'\x45', '\a', '\x63', '\x2', '\x2', '\x45', '\x46', '\a', 'w', '\x2', 
		'\x2', '\x46', '\x14', '\x3', '\x2', '\x2', '\x2', 'G', 'H', '\a', '}', 
		'\x2', '\x2', 'H', '\x16', '\x3', '\x2', '\x2', '\x2', 'I', 'J', '\a', 
		'\x7F', '\x2', '\x2', 'J', '\x18', '\x3', '\x2', '\x2', '\x2', 'K', 'L', 
		'\a', ',', '\x2', '\x2', 'L', '\x1A', '\x3', '\x2', '\x2', '\x2', 'M', 
		'N', '\a', 'u', '\x2', '\x2', 'N', 'O', '\a', 'g', '\x2', '\x2', 'O', 
		'P', '\a', 'v', '\x2', '\x2', 'P', 'Q', '\a', '\"', '\x2', '\x2', 'Q', 
		'\x1C', '\x3', '\x2', '\x2', '\x2', 'R', 'S', '\a', '*', '\x2', '\x2', 
		'S', '\x1E', '\x3', '\x2', '\x2', '\x2', 'T', 'U', '\a', '+', '\x2', '\x2', 
		'U', ' ', '\x3', '\x2', '\x2', '\x2', 'V', 'W', '\a', ']', '\x2', '\x2', 
		'W', '\"', '\x3', '\x2', '\x2', '\x2', 'X', 'Y', '\a', '_', '\x2', '\x2', 
		'Y', '$', '\x3', '\x2', '\x2', '\x2', 'Z', '[', '\a', '^', '\x2', '\x2', 
		'[', '&', '\x3', '\x2', '\x2', '\x2', '\\', ']', '\a', ')', '\x2', '\x2', 
		']', '\x61', '\t', '\x2', '\x2', '\x2', '^', '`', '\t', '\x3', '\x2', 
		'\x2', '_', '^', '\x3', '\x2', '\x2', '\x2', '`', '\x63', '\x3', '\x2', 
		'\x2', '\x2', '\x61', '_', '\x3', '\x2', '\x2', '\x2', '\x61', '\x62', 
		'\x3', '\x2', '\x2', '\x2', '\x62', '(', '\x3', '\x2', '\x2', '\x2', '\x63', 
		'\x61', '\x3', '\x2', '\x2', '\x2', '\x64', 'h', '\t', '\x2', '\x2', '\x2', 
		'\x65', 'g', '\t', '\x3', '\x2', '\x2', '\x66', '\x65', '\x3', '\x2', 
		'\x2', '\x2', 'g', 'j', '\x3', '\x2', '\x2', '\x2', 'h', '\x66', '\x3', 
		'\x2', '\x2', '\x2', 'h', 'i', '\x3', '\x2', '\x2', '\x2', 'i', '*', '\x3', 
		'\x2', '\x2', '\x2', 'j', 'h', '\x3', '\x2', '\x2', '\x2', 'k', 'l', '\n', 
		'\x4', '\x2', '\x2', 'l', ',', '\x3', '\x2', '\x2', '\x2', 'm', 'o', '\x5', 
		'\x19', '\r', '\x2', 'n', 'p', '\x5', '+', '\x16', '\x2', 'o', 'n', '\x3', 
		'\x2', '\x2', '\x2', 'p', 'q', '\x3', '\x2', '\x2', '\x2', 'q', 'o', '\x3', 
		'\x2', '\x2', '\x2', 'q', 'r', '\x3', '\x2', '\x2', '\x2', 'r', 'u', '\x3', 
		'\x2', '\x2', '\x2', 's', 'u', '\x5', '\x19', '\r', '\x2', 't', 'm', '\x3', 
		'\x2', '\x2', '\x2', 't', 's', '\x3', '\x2', '\x2', '\x2', 'u', '.', '\x3', 
		'\x2', '\x2', '\x2', 'v', 'z', '\t', '\x5', '\x2', '\x2', 'w', 'y', '\t', 
		'\x3', '\x2', '\x2', 'x', 'w', '\x3', '\x2', '\x2', '\x2', 'y', '|', '\x3', 
		'\x2', '\x2', '\x2', 'z', 'x', '\x3', '\x2', '\x2', '\x2', 'z', '{', '\x3', 
		'\x2', '\x2', '\x2', '{', '\x30', '\x3', '\x2', '\x2', '\x2', '|', 'z', 
		'\x3', '\x2', '\x2', '\x2', '}', '\x7F', '\t', '\x6', '\x2', '\x2', '~', 
		'}', '\x3', '\x2', '\x2', '\x2', '\x7F', '\x80', '\x3', '\x2', '\x2', 
		'\x2', '\x80', '~', '\x3', '\x2', '\x2', '\x2', '\x80', '\x81', '\x3', 
		'\x2', '\x2', '\x2', '\x81', '\x82', '\x3', '\x2', '\x2', '\x2', '\x82', 
		'\x83', '\b', '\x19', '\x2', '\x2', '\x83', '\x32', '\x3', '\x2', '\x2', 
		'\x2', '\t', '\x2', '\x61', 'h', 'q', 't', 'z', '\x80', '\x3', '\x2', 
		'\x3', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace CIV.Ccs
